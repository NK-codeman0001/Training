--
-- PostgreSQL database dump
--

-- Dumped from database version 12.13 (Ubuntu 12.13-0ubuntu0.20.04.1)
-- Dumped by pg_dump version 15.2 (Ubuntu 15.2-1.pgdg22.04+1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: postgis; Type: SCHEMA; Schema: -; Owner: postgres
--

CREATE SCHEMA postgis;


ALTER SCHEMA postgis OWNER TO postgres;

--
-- Name: public; Type: SCHEMA; Schema: -; Owner: postgres
--

-- *not* creating schema, since initdb creates it


ALTER SCHEMA public OWNER TO postgres;

--
-- Name: payment_methods; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE public.payment_methods AS ENUM (
    'cash',
    'upi',
    'card',
    'net banking'
);


ALTER TYPE public.payment_methods OWNER TO postgres;

--
-- Name: transaction_status; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE public.transaction_status AS ENUM (
    'success',
    'failed',
    'pending'
);


ALTER TYPE public.transaction_status OWNER TO postgres;

--
-- Name: trip_status; Type: TYPE; Schema: public; Owner: postgres
--

CREATE TYPE public.trip_status AS ENUM (
    'booked',
    'cancelled',
    'confirmed',
    'completed'
);


ALTER TYPE public.trip_status OWNER TO postgres;

--
-- Name: calculate_distance(double precision, double precision, double precision, double precision, character varying); Type: FUNCTION; Schema: public; Owner: postgres
--

CREATE FUNCTION public.calculate_distance(lon1 double precision, lat1 double precision, lon2 double precision, lat2 double precision, units character varying) RETURNS double precision
    LANGUAGE plpgsql
    AS $$
    DECLARE
        dist float = 0;
        radlat1 float;
        radlat2 float;
        theta float;
        radtheta float;
    BEGIN
        IF lat1 = lat2 OR lon1 = lon2
            THEN RETURN dist;
        ELSE
            radlat1 = pi() * lat1 / 180;
            radlat2 = pi() * lat2 / 180;
            theta = lon1 - lon2;
            radtheta = pi() * theta / 180;
            dist = sin(radlat1) * sin(radlat2) + cos(radlat1) * cos(radlat2) * cos(radtheta);

            IF dist > 1 THEN dist = 1; END IF;

            dist = acos(dist);
            dist = dist * 180 / pi();
            dist = dist * 60 * 1.1515;

            IF units = 'K' THEN dist = dist * 1.609344; END IF;
            IF units = 'N' THEN dist = dist * 0.8684; END IF;

            RETURN dist;
        END IF;
    END;
$$;


ALTER FUNCTION public.calculate_distance(lon1 double precision, lat1 double precision, lon2 double precision, lat2 double precision, units character varying) OWNER TO postgres;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: active_cabs; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.active_cabs (
    cab_id bigint NOT NULL,
    is_active boolean,
    current_location point
);


ALTER TABLE public.active_cabs OWNER TO postgres;

--
-- Name: addresses; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.addresses (
    id integer NOT NULL,
    role_id integer,
    user_id bigint,
    pincode integer,
    house_number character varying,
    city character varying,
    state character varying,
    country_id integer,
    full_address text
);


ALTER TABLE public.addresses OWNER TO postgres;

--
-- Name: bookings; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.bookings (
    id bigint NOT NULL,
    customer_id bigint,
    driver_record_id bigint,
    status public.trip_status,
    "from" timestamp without time zone DEFAULT now(),
    "to" timestamp without time zone DEFAULT now(),
    source point,
    destination point,
    booked_at timestamp with time zone DEFAULT now()
);


ALTER TABLE public.bookings OWNER TO postgres;

--
-- Name: cab_categories; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.cab_categories (
    id integer NOT NULL,
    category character varying
);


ALTER TABLE public.cab_categories OWNER TO postgres;

--
-- Name: cab_types; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.cab_types (
    id integer NOT NULL,
    type character varying,
    base_charge numeric,
    charge_type integer,
    per_charge numeric
);


ALTER TABLE public.cab_types OWNER TO postgres;

--
-- Name: cabs; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.cabs (
    id bigint NOT NULL,
    car_model_id bigint,
    category_id integer,
    type_id integer,
    is_active boolean,
    vehicle_registration_plate character varying,
    manufactured_year integer,
    registered_at date DEFAULT now()
);


ALTER TABLE public.cabs OWNER TO postgres;

--
-- Name: car_model; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.car_model (
    id bigint NOT NULL,
    model_name character varying,
    company_name character varying
);


ALTER TABLE public.car_model OWNER TO postgres;

--
-- Name: charging_modes; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.charging_modes (
    id integer NOT NULL,
    mode character varying
);


ALTER TABLE public.charging_modes OWNER TO postgres;

--
-- Name: countries; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.countries (
    id integer NOT NULL,
    name character varying
);


ALTER TABLE public.countries OWNER TO postgres;

--
-- Name: customers; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.customers (
    id bigint NOT NULL,
    name character varying,
    email character varying,
    phone character varying,
    dob date,
    gender character varying,
    created_at timestamp with time zone DEFAULT now()
);


ALTER TABLE public.customers OWNER TO postgres;

--
-- Name: drivers; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.drivers (
    id bigint NOT NULL,
    name character varying,
    email character varying,
    phone character varying,
    dob date,
    gender character varying,
    aadhaar_number bigint,
    driving_licence_number character varying,
    driving_licence_expiry_date date,
    pancard_number character varying,
    is_working boolean,
    created_at timestamp with time zone DEFAULT now()
);


ALTER TABLE public.drivers OWNER TO postgres;

--
-- Name: drivers_records; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.drivers_records (
    id bigint NOT NULL,
    driver_id bigint,
    cab_id bigint,
    start_date date,
    end_date date
);


ALTER TABLE public.drivers_records OWNER TO postgres;

--
-- Name: miscellaneous_charges; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.miscellaneous_charges (
    id integer NOT NULL,
    name character varying
);


ALTER TABLE public.miscellaneous_charges OWNER TO postgres;

--
-- Name: other_charges; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.other_charges (
    cab_types_id integer,
    miscellaneous_charges_id integer,
    charge numeric
);


ALTER TABLE public.other_charges OWNER TO postgres;

--
-- Name: payments; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.payments (
    id bigint NOT NULL,
    booking_id bigint,
    method public.payment_methods,
    amount numeric,
    created_at timestamp with time zone DEFAULT now(),
    status public.transaction_status
);


ALTER TABLE public.payments OWNER TO postgres;

--
-- Name: ratings; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.ratings (
    id bigint NOT NULL,
    booking_id bigint,
    value smallint DEFAULT 5,
    feedback text
);


ALTER TABLE public.ratings OWNER TO postgres;

--
-- Name: roles; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.roles (
    id integer NOT NULL,
    role character varying
);


ALTER TABLE public.roles OWNER TO postgres;

--
-- Name: shifts; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.shifts (
    id bigint NOT NULL,
    driver_id bigint,
    login_time time with time zone,
    logout_time time with time zone,
    successful_rides integer
);


ALTER TABLE public.shifts OWNER TO postgres;

--
-- Data for Name: active_cabs; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.active_cabs (cab_id, is_active, current_location) FROM stdin;
1	f	(122.9104995,-10.7540132)
2	t	(121.1229953,30.9833081)
3	t	(19.0295929,53.9208518)
4	f	(44.20664,14.73927)
5	f	(115.1767095,-8.7223957)
6	t	(106.750625,26.630845)
7	f	(35.70802,32.40792)
8	f	(83.142888,49.4753404)
9	t	(118.674614,37.433963)
10	f	(5.5466073,46.6693059)
11	f	(108.4703138,-6.719137)
12	f	(110.040315,27.578926)
13	f	(19.0520962,50.429849)
14	f	(105.697472,28.590337)
15	t	(-75.030651,8.931132)
16	t	(1.663862,45.161017)
17	f	(26.0472266,62.6571846)
18	f	(-8.6041746,39.7075592)
19	f	(2.591512,48.5878559)
20	f	(121.001601,14.4588552)
\.


--
-- Data for Name: addresses; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.addresses (id, role_id, user_id, pincode, house_number, city, state, country_id, full_address) FROM stdin;
1	1	1	110497	7261	Birmingham	Alabama	1	PO Box 28899
2	1	2	330981	1604	Birmingham	Alabama	4	6th Floor
3	1	3	411958	0222	Birmingham	Alabama	1	PO Box 58204
4	1	4	399129	3195	Birmingham	Alabama	3	Room 1733
5	1	5	349483	9835	Birmingham	Alabama	5	Room 1345
6	1	6	666371	0219	Montgomery	Alabama	3	Room 1621
7	1	7	848948	6121	Birmingham	Alabama	4	13th Floor
8	1	8	350077	5963	Huntsville	Alabama	2	20th Floor
9	1	9	744244	8853	Tuscaloosa	Alabama	3	Room 418
10	1	10	226539	6105	Birmingham	Alabama	4	8th Floor
11	1	11	247207	4757	Mobile	Alabama	2	13th Floor
12	1	12	736716	1203	Gadsden	Alabama	4	Suite 71
13	1	13	204275	8235	Birmingham	Alabama	2	1st Floor
14	1	14	517688	3135	Montgomery	Alabama	4	Apt 890
15	1	15	997265	1717	Mobile	Alabama	3	20th Floor
16	1	16	437959	8381	Mobile	Alabama	5	Suite 54
17	1	17	870567	4857	Tuscaloosa	Alabama	3	11th Floor
18	1	18	951413	1995	Montgomery	Alabama	1	PO Box 96217
19	1	19	773852	3557	Birmingham	Alabama	2	Apt 84
20	1	20	8130	3476	Birmingham	Alabama	2	Apt 716
21	1	21	703527	9785	Gadsden	Alabama	2	PO Box 79043
22	1	22	36174	4751	Montgomery	Alabama	2	PO Box 21192
23	1	23	487551	9551	Montgomery	Alabama	3	Room 1908
24	1	24	995933	8550	Birmingham	Alabama	1	Suite 34
25	1	25	945210	5563	Mobile	Alabama	1	PO Box 39232
26	1	26	538566	2334	Montgomery	Alabama	1	PO Box 40560
27	1	27	377797	6420	Birmingham	Alabama	2	Apt 786
28	1	28	557232	1734	Mobile	Alabama	5	Suite 48
29	1	29	649967	3581	Mobile	Alabama	3	Suite 25
30	1	30	613642	6338	Birmingham	Alabama	1	16th Floor
31	1	31	554523	6124	Tuscaloosa	Alabama	5	6th Floor
32	1	32	45342	7224	Mobile	Alabama	5	Room 186
33	1	33	197686	2866	Huntsville	Alabama	5	Room 125
34	1	34	827448	2461	Tuscaloosa	Alabama	1	Room 1157
35	1	35	540349	8042	Montgomery	Alabama	1	PO Box 30315
36	1	36	643872	9613	Anniston	Alabama	3	Apt 854
37	1	37	387361	7136	Birmingham	Alabama	3	Suite 28
38	1	38	127497	1085	Huntsville	Alabama	4	20th Floor
39	1	39	339982	4891	Huntsville	Alabama	3	12th Floor
40	1	40	108229	4769	Mobile	Alabama	3	Suite 2
41	1	41	250826	6984	Anniston	Alabama	1	Suite 74
42	1	42	860646	6268	Huntsville	Alabama	4	7th Floor
43	1	43	186832	0358	Huntsville	Alabama	2	10th Floor
44	1	44	54390	7830	Birmingham	Alabama	4	Suite 15
45	1	45	157123	6889	Mobile	Alabama	3	PO Box 29876
46	1	46	268726	1512	Montgomery	Alabama	5	Suite 15
47	1	47	340911	8641	Mobile	Alabama	1	Room 1342
48	1	48	215448	7161	Birmingham	Alabama	4	Apt 717
49	1	49	438976	3631	Mobile	Alabama	5	12th Floor
50	1	50	32745	5417	Mobile	Alabama	1	Room 518
\.


--
-- Data for Name: bookings; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.bookings (id, customer_id, driver_record_id, status, "from", "to", source, destination, booked_at) FROM stdin;
1	32	1	booked	2023-02-22 12:33:59.03431	2023-02-22 12:33:59.03431	(100.1479182,7.2166013)	(116.5314935,3.1822988)	2023-02-22 12:33:59.03431+05:30
2	21	4	cancelled	2023-02-22 12:34:08.57463	2023-02-22 12:34:08.57463	(21.376499,40.5040992)	(122.7995493,7.5932558)	2023-02-22 12:34:08.57463+05:30
3	43	2	confirmed	2023-02-22 12:34:08.588391	2023-02-22 12:34:08.588391	(111.5437,-8.2962)	(115.84573,23.028301)	2023-02-22 12:34:08.588391+05:30
4	5	15	confirmed	2023-02-22 12:34:08.596516	2023-02-22 12:34:08.596516	(100.1479182,7.2166013)	(35.4335263,33.120548)	2023-02-22 12:34:08.596516+05:30
5	22	12	completed	2023-02-22 12:34:08.604839	2023-02-22 12:34:08.604839	(37.2784835,-0.4993281)	(140.2792041,35.7914051)	2023-02-22 12:34:08.604839+05:30
6	1	9	confirmed	2023-02-22 12:34:08.613211	2023-02-22 12:34:08.613211	(110.359368,21.270702)	(-84.4172666,37.9098504)	2023-02-22 12:34:08.613211+05:30
7	31	11	completed	2023-02-22 12:34:08.621492	2023-02-22 12:34:08.621492	(117.151796,28.97844)	(16.6929175,43.4433559)	2023-02-22 12:34:08.621492+05:30
8	15	14	booked	2023-02-22 12:34:08.629892	2023-02-22 12:34:08.629892	(127.059486,45.911222)	(122.281829,-8.639266)	2023-02-22 12:34:08.629892+05:30
9	28	9	confirmed	2023-02-22 12:34:08.638241	2023-02-22 12:34:08.638241	(108.1293228,-7.3486892)	(13.414046,52.5121401)	2023-02-22 12:34:08.638241+05:30
10	41	19	completed	2023-02-22 12:34:08.646559	2023-02-22 12:34:08.646559	(-8.57269,40.2603592)	(81.145433,32.387233)	2023-02-22 12:34:08.646559+05:30
11	2	4	confirmed	2023-02-22 12:34:08.65511	2023-02-22 12:34:08.65511	(102.579531,17.8895907)	(120.7213113,13.0748879)	2023-02-22 12:34:08.65511+05:30
12	41	2	confirmed	2023-02-22 12:34:08.663061	2023-02-22 12:34:08.663061	(5.8978018,43.4945737)	(101.9861694,20.690696)	2023-02-22 12:34:08.663061+05:30
13	35	18	cancelled	2023-02-22 12:34:08.67145	2023-02-22 12:34:08.67145	(108.0005933,14.641214)	(12.4765885,57.3550131)	2023-02-22 12:34:08.67145+05:30
14	29	6	booked	2023-02-22 12:34:08.679843	2023-02-22 12:34:08.679843	(-8.5462218,40.7063972)	(-76.6701475,-12.6117479)	2023-02-22 12:34:08.679843+05:30
15	38	12	completed	2023-02-22 12:34:08.688247	2023-02-22 12:34:08.688247	(-76.5155834,-10.4911471)	(26.5290794,43.7728532)	2023-02-22 12:34:08.688247+05:30
16	10	4	confirmed	2023-02-22 12:34:08.696553	2023-02-22 12:34:08.696553	(17.953415,62.6291355)	(110.034076,23.326616)	2023-02-22 12:34:08.696553+05:30
17	31	19	completed	2023-02-22 12:34:08.704881	2023-02-22 12:34:08.704881	(111.482591,33.298364)	(-4.1927331,47.9103088)	2023-02-22 12:34:08.704881+05:30
18	2	2	confirmed	2023-02-22 12:34:08.713201	2023-02-22 12:34:08.713201	(101.0602341,41.9575515)	(-121.2969674,38.0434058)	2023-02-22 12:34:08.713201+05:30
19	39	14	completed	2023-02-22 12:34:08.721669	2023-02-22 12:34:08.721669	(5.55,7.65)	(16.7769535,60.6184239)	2023-02-22 12:34:08.721669+05:30
20	29	15	completed	2023-02-22 12:34:08.729887	2023-02-22 12:34:08.729887	(15.62129,53.63918)	(110.983333,35.604025)	2023-02-22 12:34:08.729887+05:30
21	3	20	cancelled	2023-02-22 12:34:08.738188	2023-02-22 12:34:08.738188	(-7.9442479,41.7870665)	(33.7634935,52.5871233)	2023-02-22 12:34:08.738188+05:30
22	20	4	confirmed	2023-02-22 12:34:08.746561	2023-02-22 12:34:08.746561	(111.170552,25.771635)	(111.0460407,-7.6387228)	2023-02-22 12:34:08.746561+05:30
23	22	10	completed	2023-02-22 12:34:08.754859	2023-02-22 12:34:08.754859	(-70.7168469,6.9433577)	(4.3520438,43.8447278)	2023-02-22 12:34:08.754859+05:30
24	8	2	completed	2023-02-22 12:34:08.763195	2023-02-22 12:34:08.763195	(-73.8376145,40.6967185)	(-72.9696779,5.2991829)	2023-02-22 12:34:08.763195+05:30
25	15	2	confirmed	2023-02-22 12:34:08.77161	2023-02-22 12:34:08.77161	(107.5564326,-7.2348751)	(113.7329154,-8.2030974)	2023-02-22 12:34:08.77161+05:30
26	4	3	completed	2023-02-22 12:34:08.779975	2023-02-22 12:34:08.779975	(85.646652,54.914389)	(97.369751,37.377139)	2023-02-22 12:34:08.779975+05:30
27	30	18	completed	2023-02-22 12:34:08.78834	2023-02-22 12:34:08.78834	(126.20806,8.71278)	(116.260921,40.039342)	2023-02-22 12:34:08.78834+05:30
28	35	15	completed	2023-02-22 12:34:08.796545	2023-02-22 12:34:08.796545	(125.136451,42.901533)	(-71.2485941,-41.1254857)	2023-02-22 12:34:08.796545+05:30
29	20	4	completed	2023-02-22 12:34:08.804887	2023-02-22 12:34:08.804887	(18.6926323,49.9899828)	(20.0523019,41.5722945)	2023-02-22 12:34:08.804887+05:30
30	2	19	cancelled	2023-02-22 12:34:08.813278	2023-02-22 12:34:08.813278	(15.4781267,50.8304668)	(108.0940566,-7.3055997)	2023-02-22 12:34:08.813278+05:30
31	10	6	cancelled	2023-02-22 12:34:08.821682	2023-02-22 12:34:08.821682	(12.8632487,56.2716397)	(34.2421597,2.3629945)	2023-02-22 12:34:08.821682+05:30
32	9	6	completed	2023-02-22 12:34:08.830016	2023-02-22 12:34:08.830016	(113.9250575,-7.0408631)	(122.035862,6.9956405)	2023-02-22 12:34:08.830016+05:30
33	36	8	confirmed	2023-02-22 12:34:08.838319	2023-02-22 12:34:08.838319	(132.3446399,-5.5680317)	(1.3342086,43.6036545)	2023-02-22 12:34:08.838319+05:30
34	20	18	confirmed	2023-02-22 12:34:08.846708	2023-02-22 12:34:08.846708	(5.83333,8.26667)	(69.47958,37.08571)	2023-02-22 12:34:08.846708+05:30
35	3	13	completed	2023-02-22 12:34:08.855199	2023-02-22 12:34:08.855199	(33.1070309,-25.0263578)	(13.5187927,58.078572)	2023-02-22 12:34:08.855199+05:30
36	15	13	completed	2023-02-22 12:34:08.863362	2023-02-22 12:34:08.863362	(7.907355,7.382808)	(8.271907,50.0897141)	2023-02-22 12:34:08.863362+05:30
37	27	4	confirmed	2023-02-22 12:34:08.871887	2023-02-22 12:34:08.871887	(36.6795425,35.6479869)	(92.835795,31.394935)	2023-02-22 12:34:08.871887+05:30
38	37	14	completed	2023-02-22 12:34:08.880288	2023-02-22 12:34:08.880288	(32.3668,14.8648)	(17.4637476,49.3168925)	2023-02-22 12:34:08.880288+05:30
39	8	19	cancelled	2023-02-22 12:34:08.888437	2023-02-22 12:34:08.888437	(112.662069,35.383289)	(-87.606295,14.7601863)	2023-02-22 12:34:08.888437+05:30
40	8	13	confirmed	2023-02-22 12:34:08.896702	2023-02-22 12:34:08.896702	(35.381268,32.965655)	(6.2512238,62.4658095)	2023-02-22 12:34:08.896702+05:30
41	13	2	cancelled	2023-02-22 12:34:08.905021	2023-02-22 12:34:08.905021	(25.5207204,35.3085456)	(12.87013,56.658933)	2023-02-22 12:34:08.905021+05:30
42	16	1	completed	2023-02-22 12:34:08.913394	2023-02-22 12:34:08.913394	(-73.8076421,40.6998888)	(-62.2106241,16.7909044)	2023-02-22 12:34:08.913394+05:30
43	14	16	confirmed	2023-02-22 12:34:08.921746	2023-02-22 12:34:08.921746	(33.9750018,-3.2409636)	(-48.3242858,-10.249091)	2023-02-22 12:34:08.921746+05:30
44	26	9	completed	2023-02-22 12:34:08.930094	2023-02-22 12:34:08.930094	(135.123385,48.4089744)	(106.832873,-6.279197)	2023-02-22 12:34:08.930094+05:30
45	18	7	completed	2023-02-22 12:34:08.938324	2023-02-22 12:34:08.938324	(-55.7648161,-34.343056)	(7.4266436,43.7400718)	2023-02-22 12:34:08.938324+05:30
46	16	14	confirmed	2023-02-22 12:34:08.946837	2023-02-22 12:34:08.946837	(20.5022109,52.4977237)	(-96.5943562,16.3317796)	2023-02-22 12:34:08.946837+05:30
47	29	13	completed	2023-02-22 12:34:08.955164	2023-02-22 12:34:08.955164	(-175.204947,-21.1393418)	(111.244529,21.955472)	2023-02-22 12:34:08.955164+05:30
48	24	10	booked	2023-02-22 12:34:08.963267	2023-02-22 12:34:08.963267	(117.6852235,39.0063718)	(121.131229,28.845441)	2023-02-22 12:34:08.963267+05:30
49	48	10	cancelled	2023-02-22 12:34:08.97163	2023-02-22 12:34:08.97163	(-17.1340519,32.7010866)	(69.1134149,34.5278415)	2023-02-22 12:34:08.97163+05:30
50	31	7	completed	2023-02-22 12:34:08.980067	2023-02-22 12:34:08.980067	(37.2283674,52.8056388)	(110.735357,19.710084)	2023-02-22 12:34:08.980067+05:30
\.


--
-- Data for Name: cab_categories; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.cab_categories (id, category) FROM stdin;
1	share
2	regular
3	green
4	outstation
5	rental
\.


--
-- Data for Name: cab_types; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.cab_types (id, type, base_charge, charge_type, per_charge) FROM stdin;
1	auto	10	2	8
2	bike	20	2	10
3	regular	100	2	20
4	prime	500	1	50
5	suv	400	2	50
\.


--
-- Data for Name: cabs; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.cabs (id, car_model_id, category_id, type_id, is_active, vehicle_registration_plate, manufactured_year, registered_at) FROM stdin;
1	3	1	5	t	PN15 YL5023	2009	2023-02-22
2	6	1	3	t	HR53 QR5587	2003	2023-02-22
3	7	2	1	t	HR27 VE0610	2022	2023-02-22
4	2	2	1	t	UP86 RM9008	2020	2023-02-22
5	1	2	1	t	UP51 VU2996	2016	2023-02-22
6	3	1	4	f	UP40 OH8677	2008	2023-02-22
7	7	1	1	t	UP94 GD8140	2008	2023-02-22
8	1	1	2	t	UP13 ES8435	1999	2023-02-22
9	5	1	2	t	UP55 UY2341	2015	2023-02-22
10	2	4	2	t	UP44 OX7246	2018	2023-02-22
11	3	1	1	f	HR33 CQ7831	1999	2023-02-22
12	6	5	5	f	UP20 MP6756	2002	2023-02-22
13	6	1	2	t	UP97 RT4061	2015	2023-02-22
14	3	2	1	f	PN26 DX0615	2010	2023-02-22
15	5	1	2	f	UP24 FQ0570	2001	2023-02-22
16	4	2	4	t	HR46 KP8596	2020	2023-02-22
17	4	3	4	t	PN71 YO1635	2017	2023-02-22
18	10	1	2	f	UP90 VX3595	2003	2023-02-22
19	4	2	4	f	PN82 HR2451	2018	2023-02-22
20	5	1	4	t	HR35 IT5035	2001	2023-02-22
\.


--
-- Data for Name: car_model; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.car_model (id, model_name, company_name) FROM stdin;
1	Landaulet	Maybach
2	TundraMax	Toyota
3	Taurus	Ford
4	9000	Saab
5	Odyssey	Honda
6	Discovery	Land Rover
7	Ranger	Ford
8	TundraMax	Toyota
9	Chariot	Mitsubishi
10	T100	Toyota
\.


--
-- Data for Name: charging_modes; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.charging_modes (id, mode) FROM stdin;
1	per hour
2	per kilometer
3	per day
\.


--
-- Data for Name: countries; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.countries (id, name) FROM stdin;
1	India
2	Pakistan
3	Bangladesh
4	Nepal
5	Sri Lanka
\.


--
-- Data for Name: customers; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.customers (id, name, email, phone, dob, gender, created_at) FROM stdin;
1	Andree Haberfield	ahaberfield0@pinterest.com	+7-217-667-8339	2001-09-12	Female	2023-02-22 11:55:47.559302+05:30
2	Cecelia Mattingson	cmattingson1@hibu.com	+976-263-766-0265	1980-03-21	Female	2023-02-22 11:55:54.561881+05:30
3	Quintus Barnaby	qbarnaby2@hostgator.com	+63-544-120-1997	2000-09-27	Male	2023-02-22 11:55:54.578803+05:30
4	Blaine Litchfield	blitchfield3@disqus.com	+86-863-646-8752	1986-10-24	Male	2023-02-22 11:55:54.587027+05:30
5	Ric Buick	rbuick4@icio.us	+86-379-251-0384	1984-02-04	Male	2023-02-22 11:55:54.595313+05:30
6	Ryon Sudlow	rsudlow5@netscape.com	+51-660-107-7329	1995-12-02	Male	2023-02-22 11:55:54.603626+05:30
7	Otis Paslow	opaslow6@baidu.com	+86-640-572-5021	1988-11-13	Male	2023-02-22 11:55:54.612098+05:30
8	Marty Castellone	mcastellone7@timesonline.co.uk	+7-637-646-8621	1999-08-23	Male	2023-02-22 11:55:54.620486+05:30
9	Foster MacAloren	fmacaloren8@utexas.edu	+86-508-698-5850	1995-05-21	Male	2023-02-22 11:55:54.6287+05:30
10	Pepe Barenskie	pbarenskie9@ft.com	+86-737-733-0381	1995-02-22	Male	2023-02-22 11:55:54.6371+05:30
11	Druci Tankard	dtankarda@about.com	+46-215-170-5472	1991-08-05	Female	2023-02-22 11:55:54.6456+05:30
12	Kalila Dorant	kdorantb@live.com	+57-579-982-4085	2001-03-03	Female	2023-02-22 11:55:54.653778+05:30
13	Abran Klement	aklementc@pbs.org	+7-209-642-4820	1988-11-25	Male	2023-02-22 11:55:54.662061+05:30
14	Opaline Farryann	ofarryannd@wikipedia.org	+235-181-121-5224	1984-06-08	Female	2023-02-22 11:55:54.670433+05:30
15	Lon Daburn	ldaburne@yellowbook.com	+86-228-711-6429	1991-06-01	Male	2023-02-22 11:55:54.678695+05:30
16	Travis Gawn	tgawnf@msn.com	+7-325-373-7737	1992-02-14	Male	2023-02-22 11:55:54.686942+05:30
17	Bendick Clowser	bclowserg@privacy.gov.au	+7-207-339-5948	1998-11-24	Male	2023-02-22 11:55:54.695278+05:30
18	Riane Antonowicz	rantonowiczh@cafepress.com	+256-931-823-6518	1987-09-24	Female	2023-02-22 11:55:54.703768+05:30
19	Annadiana Cave	acavei@marketwatch.com	+31-216-854-7352	1991-04-07	Female	2023-02-22 11:55:54.712062+05:30
20	Rosabella Wardesworth	rwardesworthj@shop-pro.jp	+380-386-437-0720	1980-10-08	Female	2023-02-22 11:55:54.720335+05:30
21	Dari Coton	dcotonk@latimes.com	+358-439-539-8289	1992-08-14	Female	2023-02-22 11:55:54.728562+05:30
22	Karol Standeven	kstandevenl@google.fr	+420-979-950-8726	1983-03-29	Female	2023-02-22 11:55:54.737102+05:30
23	Gilburt Turfs	gturfsm@soundcloud.com	+48-565-777-0608	1983-09-20	Male	2023-02-22 11:55:54.745323+05:30
24	Reuven Bridgen	rbridgenn@sina.com.cn	+505-743-967-1065	1983-06-19	Male	2023-02-22 11:55:54.753744+05:30
25	Quinn Footitt	qfootitto@so-net.ne.jp	+46-800-849-5955	1994-02-22	Male	2023-02-22 11:55:54.761912+05:30
26	Gay Dobsons	gdobsonsp@unc.edu	+359-678-598-4134	1987-05-01	Polygender	2023-02-22 11:55:54.770457+05:30
27	Zsa zsa Ornillos	zzsaq@state.gov	+33-150-743-7997	1994-12-04	Genderqueer	2023-02-22 11:55:54.778572+05:30
28	Dyan Mewis	dmewisr@theguardian.com	+86-568-831-6813	1993-01-31	Female	2023-02-22 11:55:54.786973+05:30
29	Kane Branthwaite	kbranthwaites@de.vu	+57-823-136-4474	1982-08-31	Male	2023-02-22 11:55:54.795229+05:30
30	Brenden Gear	bgeart@narod.ru	+62-873-882-0923	2000-06-01	Male	2023-02-22 11:55:54.803647+05:30
31	Kelsey Blastock	kblastocku@abc.net.au	+225-248-995-3863	1983-02-05	Genderfluid	2023-02-22 11:55:54.812121+05:30
32	Oren Wailes	owailesv@indiegogo.com	+55-300-312-0401	1981-09-16	Male	2023-02-22 11:55:54.82041+05:30
33	Isa Cattermole	icattermolew@w3.org	+86-278-968-6548	1981-08-12	Female	2023-02-22 11:55:54.82894+05:30
34	Rozalie Hinstridge	rhinstridgex@alexa.com	+86-814-801-1173	1998-11-27	Female	2023-02-22 11:55:54.837114+05:30
35	Clari Eusden	ceusdeny@ning.com	+86-399-768-5848	1994-02-11	Female	2023-02-22 11:55:54.845491+05:30
36	Erhart Cheeney	echeeneyz@bigcartel.com	+380-586-337-6012	1986-01-10	Male	2023-02-22 11:55:54.85382+05:30
37	Nicky Waliszewski	nwaliszewski10@jiathis.com	+86-640-719-2903	1992-11-01	Female	2023-02-22 11:55:54.89556+05:30
38	Minda Cuniam	mcuniam11@msu.edu	+86-735-950-2168	1987-10-15	Female	2023-02-22 11:55:54.903929+05:30
39	Imojean Reid	ireid12@nationalgeographic.com	+503-742-880-4326	2001-04-13	Female	2023-02-22 11:55:54.912233+05:30
40	Arnaldo Cajkler	acajkler13@rakuten.co.jp	+62-812-783-7137	1980-08-23	Male	2023-02-22 11:55:54.920634+05:30
41	Robinet Byrd	rbyrd14@usgs.gov	+86-273-949-6898	1985-06-02	Female	2023-02-22 11:55:54.928911+05:30
42	Zolly Groven	zgroven15@usatoday.com	+86-605-389-1671	1999-10-08	Male	2023-02-22 11:55:54.937288+05:30
43	Olenolin Barthelemy	obarthelemy16@loc.gov	+33-629-184-7415	1996-01-19	Agender	2023-02-22 11:55:54.945495+05:30
44	Benn Decayette	bdecayette17@csmonitor.com	+48-940-343-3978	1987-08-09	Male	2023-02-22 11:55:54.953888+05:30
45	Eugenius Trase	etrase18@slate.com	+86-542-132-9574	1991-07-10	Male	2023-02-22 11:55:54.962205+05:30
46	Carlyle Jelley	cjelley19@nsw.gov.au	+420-909-529-2806	1998-07-17	Male	2023-02-22 11:55:54.970538+05:30
47	Meara Dinesen	mdinesen1a@mapy.cz	+66-715-204-1117	1992-01-19	Female	2023-02-22 11:55:54.978892+05:30
48	Cass McGann	cmcgann1b@tinypic.com	+98-189-440-6013	1992-02-07	Female	2023-02-22 11:55:54.987057+05:30
49	Naoma Tivnan	ntivnan1c@dyndns.org	+48-302-220-8612	1982-07-19	Female	2023-02-22 11:55:54.995436+05:30
50	Jedediah McEnery	jmcenery1d@sourceforge.net	+55-917-135-3495	1982-08-12	Male	2023-02-22 11:55:55.003827+05:30
\.


--
-- Data for Name: drivers; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.drivers (id, name, email, phone, dob, gender, aadhaar_number, driving_licence_number, driving_licence_expiry_date, pancard_number, is_working, created_at) FROM stdin;
1	Bambi Olenikov	bolenikov0@state.gov	+48 489 583 2070	1981-06-03	Female	910141616107	HR37 16491949170	2025-09-03	QPBUD1723Q	t	2023-02-22 12:00:27.019051+05:30
2	Crista Burberye	cburberye1@ihg.com	+48 916 658 4642	1997-12-16	Female	469573510044	HR04 35456633825	2027-06-23	LJXDS1669P	t	2023-02-22 12:00:27.042887+05:30
3	Bathsheba Whannel	bwhannel2@vk.com	+92 396 797 4585	1987-02-27	Female	731174865909	HR67 70936251545	2028-08-27	HXRPL8096P	t	2023-02-22 12:00:27.051221+05:30
4	Nannie Tansly	ntansly3@t.co	+234 499 100 5340	1990-08-26	Female	903435673432	UP48 20686411385	2024-02-17	BVSGM3543U	t	2023-02-22 12:00:27.059504+05:30
5	Glenine Mechan	gmechan4@disqus.com	+386 863 567 8439	1982-02-11	Non-binary	975666015587	HR23 26547865642	2029-05-21	PVTRO8176E	t	2023-02-22 12:00:27.067907+05:30
6	Cass Starbucke	cstarbucke5@wsj.com	+502 316 726 1268	1985-05-16	Genderqueer	943995217584	UP55 71908288152	2030-01-04	SNCBZ7294N	t	2023-02-22 12:00:27.07618+05:30
7	Catherina Caton	ccaton6@de.vu	+86 495 536 5946	1988-09-30	Female	410393864510	UP07 23253510427	2028-02-10	KPUFG6322Q	t	2023-02-22 12:00:27.084515+05:30
8	Michaela Kalkhoven	mkalkhoven7@buzzfeed.com	+52 139 659 3643	1989-08-18	Female	481491339491	PN78 85659610763	2029-05-18	VRQAN7283R	t	2023-02-22 12:00:27.092748+05:30
9	Rosie Torbett	rtorbett8@cornell.edu	+63 908 276 6898	1989-09-06	Female	569887230656	PN36 84448770566	2028-09-27	RQNHG9915F	t	2023-02-22 12:00:27.101222+05:30
10	Lem Pauletti	lpauletti9@clickbank.net	+63 420 169 3881	1997-04-24	Male	42115278472	PN16 63253929212	2027-09-03	ESNFC3840G	t	2023-02-22 12:00:27.109538+05:30
11	Mandel Menelaws	mmenelawsa@cargocollective.com	+86 385 616 7672	1990-09-23	Male	596479894499	PN45 00102207060	2027-10-28	NAGKP6649N	t	2023-02-22 12:00:27.117933+05:30
12	Valdemar Antognazzi	vantognazzib@slate.com	+62 154 977 8855	1994-02-06	Male	210588428027	HR39 69817955666	2027-01-02	ZXJYR7975B	t	2023-02-22 12:00:27.126298+05:30
13	Gib Heselwood	gheselwoodc@pen.io	+66 659 179 0288	1988-08-29	Male	484039396302	UP42 79583349669	2023-09-27	RPKVQ2230K	t	2023-02-22 12:00:27.134685+05:30
14	Carlie Franke	cfranked@i2i.jp	+54 402 817 8719	1986-05-17	Male	537975942305	PN17 17525426337	2023-04-17	GTPNI8118Y	t	2023-02-22 12:00:27.142879+05:30
15	Tory Carlick	tcarlicke@rambler.ru	+63 664 780 8139	1999-01-13	Bigender	120369184047	UP97 79696446653	2023-12-21	INXCD5439X	t	2023-02-22 12:00:27.151258+05:30
16	Harley Geerling	hgeerlingf@ameblo.jp	+7 874 511 2186	1984-04-12	Genderfluid	614952399430	HR32 71393817042	2025-11-10	BXLWA7141L	t	2023-02-22 12:00:27.159707+05:30
17	Jessi Durban	jdurbang@bloomberg.com	+62 497 797 6571	1989-02-15	Female	745011881041	HR46 36847005074	2026-02-01	DJXZC9459I	t	2023-02-22 12:00:27.167995+05:30
18	Cosimo Trillow	ctrillowh@comcast.net	+86 752 193 0082	1989-06-20	Polygender	149749526448	HR88 40135123469	2023-03-11	TMSGL3751R	t	2023-02-22 12:00:27.17629+05:30
19	Dorothy McGahey	dmcgaheyi@joomla.org	+966 845 294 6627	1991-02-18	Non-binary	913166975806	PN06 99422253672	2028-11-02	YUWGX4722V	t	2023-02-22 12:00:27.18464+05:30
20	Normand Josskowitz	njosskowitzj@umn.edu	+86 568 910 7173	1987-01-11	Male	111037016473	UP68 93416276449	2029-04-10	HJZLX3873K	t	2023-02-22 12:00:27.193022+05:30
\.


--
-- Data for Name: drivers_records; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.drivers_records (id, driver_id, cab_id, start_date, end_date) FROM stdin;
1	1	1	2016-11-15	\N
2	2	2	2014-12-21	\N
3	3	3	2004-06-09	\N
4	4	4	2008-12-03	\N
5	5	5	2013-07-21	\N
6	6	6	2002-10-17	\N
7	7	7	2004-01-02	\N
8	8	8	2007-11-19	\N
9	9	9	2002-06-01	\N
10	10	10	2014-02-13	\N
11	11	11	2012-04-04	\N
12	12	12	2005-10-19	\N
13	13	13	2009-11-10	\N
14	14	14	2005-05-17	\N
15	15	15	2016-01-10	\N
16	16	16	2013-01-06	\N
17	17	17	2005-08-25	\N
18	18	18	2016-03-01	\N
19	19	19	2010-09-12	\N
20	20	20	2015-03-18	\N
\.


--
-- Data for Name: miscellaneous_charges; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.miscellaneous_charges (id, name) FROM stdin;
1	outstation charge
2	waiting  charge
3	night charge
4	extending charge
\.


--
-- Data for Name: other_charges; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.other_charges (cab_types_id, miscellaneous_charges_id, charge) FROM stdin;
1	1	100
1	2	50
1	3	50
1	4	30
2	1	0
2	2	50
2	3	50
2	4	30
3	1	150
3	2	60
3	3	60
3	4	50
4	1	200
4	2	100
4	3	100
4	4	100
5	1	200
5	2	100
5	3	100
5	4	100
\.


--
-- Data for Name: payments; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.payments (id, booking_id, method, amount, created_at, status) FROM stdin;
1	1	net banking	1535.01	2023-02-22 12:55:17.500884+05:30	pending
3	3	net banking	2933.75	2023-02-22 12:55:35.042224+05:30	success
4	4	net banking	1534.47	2023-02-22 12:55:35.056783+05:30	success
5	5	upi	2510.44	2023-02-22 12:55:35.064948+05:30	success
6	6	cash	1632.74	2023-02-22 12:55:35.073382+05:30	success
7	7	card	1051.32	2023-02-22 12:55:35.081657+05:30	success
8	8	card	1995.3	2023-02-22 12:55:35.089906+05:30	pending
9	9	card	1732.35	2023-02-22 12:55:35.098331+05:30	success
10	10	net banking	1866.13	2023-02-22 12:55:35.106574+05:30	success
11	11	upi	1552.91	2023-02-22 12:55:35.115059+05:30	success
12	12	card	2493.04	2023-02-22 12:55:35.123287+05:30	success
14	14	card	2529.32	2023-02-22 12:55:35.13176+05:30	pending
15	15	net banking	2192.83	2023-02-22 12:55:35.140018+05:30	success
16	16	net banking	2478.55	2023-02-22 12:55:35.14844+05:30	success
17	17	upi	2188.6	2023-02-22 12:55:35.15667+05:30	success
18	18	net banking	1914.34	2023-02-22 12:55:35.164927+05:30	success
19	19	card	1854.4	2023-02-22 12:55:35.17331+05:30	success
20	20	net banking	2876.08	2023-02-22 12:55:35.181668+05:30	success
22	22	net banking	2860.63	2023-02-22 12:55:35.190147+05:30	success
23	23	card	1010.09	2023-02-22 12:55:35.198466+05:30	success
24	24	upi	1197.6	2023-02-22 12:55:35.206647+05:30	success
25	25	upi	2367.05	2023-02-22 12:55:35.215067+05:30	success
26	26	cash	1851.7	2023-02-22 12:55:35.223304+05:30	success
27	27	cash	1962.23	2023-02-22 12:55:35.231701+05:30	success
28	28	card	2259.62	2023-02-22 12:55:35.240002+05:30	success
29	29	upi	2891.94	2023-02-22 12:55:35.248335+05:30	success
32	32	upi	1373.88	2023-02-22 12:55:35.256581+05:30	success
33	33	upi	1774.45	2023-02-22 12:55:35.265048+05:30	success
34	34	net banking	2505.46	2023-02-22 12:55:35.273362+05:30	success
35	35	net banking	1650.92	2023-02-22 12:55:35.281777+05:30	success
36	36	net banking	1836.68	2023-02-22 12:55:35.28994+05:30	success
37	37	net banking	2898.81	2023-02-22 12:55:35.298305+05:30	success
38	38	net banking	1971.79	2023-02-22 12:55:35.306548+05:30	success
40	40	net banking	2791.24	2023-02-22 12:55:35.314825+05:30	success
42	42	net banking	1666.57	2023-02-22 12:55:35.323284+05:30	success
43	43	upi	1279.1	2023-02-22 12:55:35.331559+05:30	success
44	44	net banking	1110.64	2023-02-22 12:55:35.340041+05:30	success
45	45	net banking	2446.0	2023-02-22 12:55:35.348259+05:30	success
46	46	upi	2142.52	2023-02-22 12:55:35.35656+05:30	success
47	47	card	2411.14	2023-02-22 12:55:35.364974+05:30	success
48	48	cash	1710.6	2023-02-22 12:55:35.373315+05:30	pending
50	50	upi	1028.94	2023-02-22 12:55:35.381695+05:30	success
\.


--
-- Data for Name: ratings; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.ratings (id, booking_id, value, feedback) FROM stdin;
5	5	2	Quisque porta volutpat erat. Quisque erat eros, viverra eget, congue eget, semper rutrum, nulla. Nunc purus.
7	7	5	In hac habitasse platea dictumst. Maecenas ut massa quis augue luctus tincidunt. Nulla mollis molestie lorem.
10	10	5	Nullam sit amet turpis elementum ligula vehicula consequat.
15	15	2	In quis justo. Maecenas rhoncus aliquam lacus. Morbi quis tortor id nulla ultrices aliquet.
17	17	5	Vestibulum quam sapien, varius ut, blandit non, interdum in, ante. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Duis faucibus accumsan odio. Curabitur convallis.
19	19	1	Phasellus in felis. Donec semper sapien a libero. Nam dui.
20	20	5	Sed sagittis. Nam congue, risus semper porta volutpat, quam pede lobortis ligula, sit amet eleifend pede libero quis orci.
23	23	4	Integer non velit.
24	24	5	Nulla tellus.
26	26	1	Curabitur in libero ut massa volutpat convallis. Morbi odio odio, elementum eu, interdum eu, tincidunt in, leo. Maecenas pulvinar lobortis est.
27	27	5	Nulla mollis molestie lorem. Quisque ut erat.
28	28	5	Praesent blandit lacinia erat. Vestibulum sed magna at nunc commodo placerat.
29	29	4	Donec posuere metus vitae ipsum. Aliquam non mauris. Morbi non lectus.
32	32	2	Suspendisse potenti.
35	35	4	Maecenas tristique, est et tempus semper, est quam pharetra magna, ac consequat metus sapien ut nunc. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Mauris viverra diam vitae quam. Suspendisse potenti.
36	36	2	In tempor, turpis nec euismod scelerisque, quam turpis adipiscing lorem, vitae mattis nibh ligula nec sem. Duis aliquam convallis nunc. Proin at turpis a pede posuere nonummy.
38	38	1	Nunc purus. Phasellus in felis.
42	42	1	Quisque id justo sit amet sapien dignissim vestibulum. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Nulla dapibus dolor vel est.
44	44	4	Vivamus vel nulla eget eros elementum pellentesque.
45	45	1	In est risus, auctor sed, tristique in, tempus sit amet, sem.
47	47	2	Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Mauris viverra diam vitae quam. Suspendisse potenti.
50	50	4	Etiam vel augue. Vestibulum rutrum rutrum neque. Aenean auctor gravida sem.
\.


--
-- Data for Name: roles; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.roles (id, role) FROM stdin;
1	customer
2	driver
\.


--
-- Data for Name: shifts; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.shifts (id, driver_id, login_time, logout_time, successful_rides) FROM stdin;
1	7	20:15:56+05:30	02:24:18+05:30	6
2	10	00:29:58+05:30	09:42:44+05:30	1
3	5	23:21:04+05:30	09:49:16+05:30	4
4	3	06:15:14+05:30	10:08:55+05:30	3
5	2	04:47:47+05:30	11:19:53+05:30	6
6	11	08:16:14+05:30	11:35:09+05:30	4
7	1	17:48:10+05:30	22:16:34+05:30	9
8	4	06:49:00+05:30	22:01:02+05:30	2
9	15	15:14:56+05:30	23:19:11+05:30	9
10	14	21:05:00+05:30	00:22:07+05:30	4
11	5	23:15:02+05:30	11:12:10+05:30	3
12	8	13:14:08+05:30	07:32:16+05:30	8
13	5	02:07:24+05:30	22:23:58+05:30	1
14	9	02:14:09+05:30	05:54:37+05:30	5
15	7	10:26:21+05:30	00:31:53+05:30	2
16	17	12:11:18+05:30	20:45:28+05:30	5
17	1	03:22:53+05:30	18:29:02+05:30	6
18	4	10:22:03+05:30	15:09:26+05:30	1
19	10	07:35:44+05:30	05:12:35+05:30	1
20	4	05:44:51+05:30	00:34:26+05:30	2
21	5	10:57:45+05:30	06:44:30+05:30	5
22	1	12:26:40+05:30	05:57:37+05:30	10
23	17	01:12:17+05:30	00:31:07+05:30	9
24	1	18:13:01+05:30	09:23:17+05:30	8
25	20	19:32:14+05:30	08:15:36+05:30	2
26	2	13:34:50+05:30	13:21:52+05:30	4
27	12	19:44:34+05:30	21:06:03+05:30	3
28	3	03:27:22+05:30	04:02:50+05:30	3
29	15	04:36:43+05:30	10:26:14+05:30	5
30	14	03:38:13+05:30	10:40:06+05:30	8
\.


--
-- Name: active_cabs active_cab_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.active_cabs
    ADD CONSTRAINT active_cab_pkey PRIMARY KEY (cab_id);


--
-- Name: addresses addresses_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.addresses
    ADD CONSTRAINT addresses_pkey PRIMARY KEY (id);


--
-- Name: bookings bookings_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.bookings
    ADD CONSTRAINT bookings_pkey PRIMARY KEY (id);


--
-- Name: cab_categories cab_categories_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cab_categories
    ADD CONSTRAINT cab_categories_pkey PRIMARY KEY (id);


--
-- Name: cab_types cab_types_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cab_types
    ADD CONSTRAINT cab_types_pkey PRIMARY KEY (id);


--
-- Name: cabs cabs_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cabs
    ADD CONSTRAINT cabs_pkey PRIMARY KEY (id);


--
-- Name: cabs cabs_vehicle_registration_plate_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cabs
    ADD CONSTRAINT cabs_vehicle_registration_plate_key UNIQUE (vehicle_registration_plate);


--
-- Name: car_model car_model_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.car_model
    ADD CONSTRAINT car_model_pkey PRIMARY KEY (id);


--
-- Name: charging_modes charging_modes_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.charging_modes
    ADD CONSTRAINT charging_modes_pkey PRIMARY KEY (id);


--
-- Name: countries countries_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.countries
    ADD CONSTRAINT countries_pkey PRIMARY KEY (id);


--
-- Name: drivers drivers_phone_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.drivers
    ADD CONSTRAINT drivers_phone_key UNIQUE (phone);


--
-- Name: drivers drivers_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.drivers
    ADD CONSTRAINT drivers_pkey PRIMARY KEY (id);


--
-- Name: drivers_records drivers_records_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.drivers_records
    ADD CONSTRAINT drivers_records_pkey PRIMARY KEY (id);


--
-- Name: miscellaneous_charges miscellaneous_charges_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.miscellaneous_charges
    ADD CONSTRAINT miscellaneous_charges_pkey PRIMARY KEY (id);


--
-- Name: payments payments_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.payments
    ADD CONSTRAINT payments_pkey PRIMARY KEY (id);


--
-- Name: ratings ratings_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ratings
    ADD CONSTRAINT ratings_pkey PRIMARY KEY (id);


--
-- Name: roles roles_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.roles
    ADD CONSTRAINT roles_pkey PRIMARY KEY (id);


--
-- Name: shifts shifts_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shifts
    ADD CONSTRAINT shifts_pkey PRIMARY KEY (id);


--
-- Name: customers users_phone_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.customers
    ADD CONSTRAINT users_phone_key UNIQUE (phone);


--
-- Name: customers users_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.customers
    ADD CONSTRAINT users_pkey PRIMARY KEY (id);


--
-- Name: active_cabs active_cab_cab_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.active_cabs
    ADD CONSTRAINT active_cab_cab_id_fkey FOREIGN KEY (cab_id) REFERENCES public.cabs(id);


--
-- Name: addresses addresses_country_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.addresses
    ADD CONSTRAINT addresses_country_id_fkey FOREIGN KEY (country_id) REFERENCES public.countries(id);


--
-- Name: addresses addresses_role_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.addresses
    ADD CONSTRAINT addresses_role_id_fkey FOREIGN KEY (role_id) REFERENCES public.roles(id);


--
-- Name: addresses addresses_user_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.addresses
    ADD CONSTRAINT addresses_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.customers(id);


--
-- Name: bookings bookings_customer_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.bookings
    ADD CONSTRAINT bookings_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.customers(id);


--
-- Name: bookings bookings_driver_record_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.bookings
    ADD CONSTRAINT bookings_driver_record_id_fkey FOREIGN KEY (driver_record_id) REFERENCES public.drivers_records(id);


--
-- Name: cab_types cab_types_charge_type_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cab_types
    ADD CONSTRAINT cab_types_charge_type_fkey FOREIGN KEY (charge_type) REFERENCES public.charging_modes(id);


--
-- Name: cabs cabs_car_model_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cabs
    ADD CONSTRAINT cabs_car_model_id_fkey FOREIGN KEY (car_model_id) REFERENCES public.car_model(id);


--
-- Name: cabs cabs_category_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cabs
    ADD CONSTRAINT cabs_category_id_fkey FOREIGN KEY (category_id) REFERENCES public.cab_categories(id);


--
-- Name: cabs cabs_type_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.cabs
    ADD CONSTRAINT cabs_type_id_fkey FOREIGN KEY (type_id) REFERENCES public.cab_types(id);


--
-- Name: drivers_records drivers_records_cab_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.drivers_records
    ADD CONSTRAINT drivers_records_cab_id_fkey FOREIGN KEY (cab_id) REFERENCES public.cabs(id);


--
-- Name: drivers_records drivers_records_driver_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.drivers_records
    ADD CONSTRAINT drivers_records_driver_id_fkey FOREIGN KEY (driver_id) REFERENCES public.drivers(id);


--
-- Name: other_charges other_charges_cab_types_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.other_charges
    ADD CONSTRAINT other_charges_cab_types_id_fkey FOREIGN KEY (cab_types_id) REFERENCES public.cab_types(id);


--
-- Name: other_charges other_charges_miscellaneous_charges_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.other_charges
    ADD CONSTRAINT other_charges_miscellaneous_charges_id_fkey FOREIGN KEY (miscellaneous_charges_id) REFERENCES public.miscellaneous_charges(id);


--
-- Name: payments payments_booking_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.payments
    ADD CONSTRAINT payments_booking_id_fkey FOREIGN KEY (booking_id) REFERENCES public.bookings(id);


--
-- Name: ratings ratings_booking_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.ratings
    ADD CONSTRAINT ratings_booking_id_fkey FOREIGN KEY (booking_id) REFERENCES public.bookings(id);


--
-- Name: shifts shifts_driver_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.shifts
    ADD CONSTRAINT shifts_driver_id_fkey FOREIGN KEY (driver_id) REFERENCES public.drivers(id);


--
-- Name: SCHEMA public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE USAGE ON SCHEMA public FROM PUBLIC;
GRANT ALL ON SCHEMA public TO PUBLIC;


--
-- PostgreSQL database dump complete
--

