$ irb
_____________________________________________________________________________________
//stdout commands
_____________________________________________________________________________________
print "hello system"
hello system => nil 

puts "hello system"	#print + \n
hello system
 => nil       
 
putc "hello system"    #print on first char
h => "hello system" 

//variables
emp_name="Neeraj"      #string Class
 => "Neeraj" 
emp_name.class
 => String 

emp_id = 101		#integer class
 => 101 
emp_id.class
 => Integer 

isMale = true		# Trueclass
 => true 
isMale.class
 => TrueClass 

isMarried = false	# Falseclass
 => false 
isMarried.class
 => FalseClass 

leaves = nil		# Nilclass
 => nil 
leaves.class
 => NilClass 
leaves.nil?
 => true

_____________________________________________________________________________________
//strings
_____________________________________________________________________________________
emp_name = "Neeraj Kumar"
 => "Neeraj Kumar" 
puts emp_name
Neeraj Kumar
 => nil                                      

########## Using indexes in String ###########
puts emp_name.length
12
 => nil                                                    

> puts emp_name[0]
N
 => nil                                                    

> puts emp_name[12]

 => nil                                                    

> puts emp_name[11]
r
 => nil 

> puts emp_name[1,4]         #it will print 4 char from index 1
eera
 => nil                                                    

> puts emp_name[2,4]	    #it will print 4 char from index 2
eraj
 => nil

> puts emp_name.index("N")    #it return index of first matching char from left to right
0
 => nil                                                    

> puts emp_name.index("E")

 => nil                                                    

> puts emp_name.index("e")
1
 => nil 

> puts emp_name.index("a")
4
 => nil 

> puts emp_name.index("K")
7
 => nil 
 
 > puts emp_name.index("ee")
1
 => nil 

########## Escape Characters in String ###########
emp_name = "Neeraj-Kumar"
 => "Neeraj-Kumar" 
puts emp_name
Neeraj-Kumar
 => nil                                      

emp_name = "Neeraj/nKumar"
 => "Neeraj/nKumar" 
puts emp_name
Neeraj/nKumar
 => nil                                      

emp_name = "Neeraj\nKumar"
 => "Neeraj\nKumar" 
puts emp_name
Neeraj
Kumar
 => nil 

puts "Neeraj\nKumar" 			#to print in newline
Neeraj
Kumar                                        
 => nil 

emp_name = "Neeraj\"Kumar"		#'\' escape charater to print '"'
 => "Neeraj\"Kumar" 
puts emp_name
Neeraj"Kumar
 => nil 

########## Upper Case the String ###########
emp_name = "Neeraj Kumar"
 => "Neeraj Kumar" 
> puts emp_name.upcase
NEERAJ KUMAR
 => nil                                          
> puts emp_name.upcase()
NEERAJ KUMAR
 => nil  

########## Down Case the String ###########
> puts emp_name.downcase
neeraj kumar
 => nil     

########## Stripe Function ###########
emp_name = "     Neeraj Kumar     "
 => "     Neeraj Kumar     " 
> puts emp_name
     Neeraj Kumar     
 => nil 

> puts emp_name.strip		# remove extra spaces at start and end of string
Neeraj Kumar
 => nil  
 
emp_name = "     Neeraj     Kumar     "
 => "     Neeraj     Kumar     " 
> puts emp_name.strip
Neeraj     Kumar
 => nil
       
########## Length of String ###########
emp_name = "     Neeraj     Kumar     "
 => "     Neeraj     Kumar     " 
> puts emp_name.length
26
 => nil                                                    

> puts emp_name.strip.length
16
 => nil                                                               
                                                           
########## Include Method in String ###########
> puts emp_name.include? "kumar"
false
 => nil                                                               
> puts emp_name.include? "Kumar"
true
 => nil 

_____________________________________________________________________________________
Math & Numbers
_____________________________________________________________________________________

########## Math operators ###########
> 2-3
 => -1 

> 3-3
 => 0 

> 3*3
 => 9 

> 3**3
 => 27 

> 3**4
 => 81 

> 9/2
 => 4 

> 9.0/2
 => 4.5 

> 9/2.0
 => 4.5 

> 9%2
 => 1 

> 9.0%2
 => 1.0 

> 9%2.0
 => 1.0 

########## Numbers ###########









              
